[{"/Users/mcneelyad/Desktop/Projects/react-weather/src/index.js":"1","/Users/mcneelyad/Desktop/Projects/react-weather/src/App.js":"2","/Users/mcneelyad/Desktop/Projects/react-weather/src/components/Forecast.js":"3"},{"size":197,"mtime":1611448094950,"results":"4","hashOfConfig":"5"},{"size":287,"mtime":1611449401955,"results":"6","hashOfConfig":"5"},{"size":3569,"mtime":1616282339662,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1spjk48",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/mcneelyad/Desktop/Projects/react-weather/src/index.js",[],["16","17"],"/Users/mcneelyad/Desktop/Projects/react-weather/src/App.js",[],"/Users/mcneelyad/Desktop/Projects/react-weather/src/components/Forecast.js",["18","19","20","21"],"import React, { useState, useEffect } from 'react';\n\nimport dotenv from  'dotenv';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport axios from 'axios';\n\nconst key = process.env.REACT_APP_API_KEY;\n\nconst Forecast = () => {\n    const [apiData, setApiData] = useState({});\n    const [getState, setGetState] = useState('');\n    const [state, setState] = useState('');\n    const [error, setError] = useState('');\n\n    // API KEY AND URL\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${state}&appid=${key}`;\n\n    // Side effect\n    useEffect(() => {\n        fetch(apiUrl)\n            .then((res) => res.json())\n            .then((data) => setApiData(data));\n        console.log(apiData);\n    }, [apiUrl]);\n\n    const inputHandler = (event) => {\n        setGetState(event.target.value);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (getState.length === 0) {\n            setError('Please enter a location');\n        } else {\n            setError('');\n        }\n        setState(getState);\n    };\n\n    const kelvinToFarenheit = (kelvin) => {\n        const celsius = kelvin - 273;\n        return Math.floor(celsius * (9 / 5) + 32);\n    };\n\n    return (\n        <div className=\"joinOuterContainer\">\n            <div className=\"joinInnerContainer\">\n                <div className=\"location-form\">\n                    <label className=\"heading\">\n                        Enter a location\n                    </label>\n                    <br /><br />\n                    <input\n                        type=\"text\"\n                        id=\"location-input\"\n                        onChange={inputHandler}\n                        value={getState}\n                    />\n                    <br /><br />\n                    <button variant=\"contained\" className=\"button mt-2\" onClick={submitHandler}>\n                        Search\n                    </button>\n                    <br /><br />\n                </div>\n\n                {error && <div className=\"error-message\">{error}</div>}\n                <div className=\"conditions\">\n                    {apiData.main &&\n                        <Card className=\"conditions\">\n                            <CardContent>\n                                <img\n                                    src={`http://openweathermap.org/img/w/${apiData.weather[0].icon}.png`}\n                                    alt=\"Weather Status Icon\"\n                                    className=\"weather-icon\"\n                                />\n                                <div className=\"temp-conditions\">\n                                    <Typography>Current Temperature: {kelvinToFarenheit(apiData.main.temp)}&deg;F</Typography>\n                                    <Typography>Feels Like: {kelvinToFarenheit(apiData.main.feels_like)}&deg;F</Typography>\n                                    <Typography>Low: {kelvinToFarenheit(apiData.main.temp_min)}&deg;F</Typography>\n                                    <Typography>High: {kelvinToFarenheit(apiData.main.temp_max)}&deg;F</Typography>\n                                    <Typography>Conditions: {apiData.weather[0].description}</Typography>\n                                </div>\n                            </CardContent>\n                        </Card>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Forecast;\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":3,"column":8,"nodeType":"28","messageId":"29","endLine":3,"endColumn":14},{"ruleId":"26","severity":1,"message":"30","line":6,"column":8,"nodeType":"28","messageId":"29","endLine":6,"endColumn":19},{"ruleId":"26","severity":1,"message":"31","line":10,"column":8,"nodeType":"28","messageId":"29","endLine":10,"endColumn":13},{"ruleId":"32","severity":1,"message":"33","line":29,"column":8,"nodeType":"34","endLine":29,"endColumn":16,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'dotenv' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiData'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [apiData, apiUrl]",{"range":"41","text":"42"},[885,893],"[apiData, apiUrl]"]